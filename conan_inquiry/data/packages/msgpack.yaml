recipies:
- repo: {bintray: 'bincrafters/public-conan/msgpack:bincrafters'}
urls:
  website: https://msgpack.org/
  github: msgpack/msgpack-c
code_example: |
  msgpack::type::tuple<int, bool, std::string> src(1, true, "example");

  // serialize the object into the buffer.
  // any classes that implements write(const char*,size_t) can be a buffer.
  std::stringstream buffer;
  msgpack::pack(buffer, src);

  // send the buffer ...
  buffer.seekg(0);

  // deserialize the buffer into msgpack::object instance.
  std::string str(buffer.str());

  msgpack::object_handle oh =
      msgpack::unpack(str.data(), str.size());

  // deserialized object is valid during the msgpack::object_handle instance is alive.
  msgpack::object deserialized = oh.get();

  // msgpack::object supports ostream.
  std::cout << deserialized << std::endl;

  // convert msgpack::object instance into the original type.
  // if the type is mismatched, it throws msgpack::type_error exception.
  msgpack::type::tuple<int, bool, std::string> dst;
  deserialized.convert(dst);
categories:
  - topic.library.fileformat.generic.msgpack
  - topic.library.serialization.lowlevel
  - standard.cpp.03
  - standard.cpp.11
  - status.5stable